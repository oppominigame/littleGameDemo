{"version":3,"sources":["WebSocket.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;GAMG;;;;;;;;;;;;;;;;;;;;;AAEG,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAA;AAG3C;IAA2C,iCAAY;IADvD;QAAA,qEA0CC;QAvCC,cAAQ,GAAa,IAAI,CAAA;QAGzB,aAAO,GAAY,IAAI,CAAA;QAGvB,eAAS,GAAY,IAAI,CAAA;;IAiC3B,CAAC;IA/BC,6BAAK,GAAL;QAAA,iBAyBC;QAxBC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC7C,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;YACxD,EAAE,CAAC,MAAM,GAAG,UAAC,KAAK;gBAChB,KAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAA;gBACnC,IAAG,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;oBACnC,EAAE,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAA;iBAC/C;qBAAM;oBACL,KAAI,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAA;iBAC/C;YACH,CAAC,CAAA;YACD,EAAE,CAAC,SAAS,GAAG,UAAC,KAAK;gBACnB,KAAI,CAAC,GAAG,CAAC,wBAAsB,KAAK,CAAC,IAAM,CAAC,CAAA;YAC9C,CAAC,CAAA;YACD,EAAE,CAAC,OAAO,GAAG,UAAC,KAAK;gBACjB,KAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAA;YACtC,CAAC,CAAA;YACD,EAAE,CAAC,OAAO,GAAG,UAAC,KAAK;gBACjB,KAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAA;YACvC,CAAC,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC/C,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;QAClC,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,2BAAG,GAAH,UAAI,GAAG;QACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,CAAA;IACnD,CAAC;IAtCD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;mDACM;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACK;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACO;IARN,aAAa;QADjC,OAAO;OACa,aAAa,CAyCjC;IAAD,oBAAC;CAzCD,AAyCC,CAzC0C,EAAE,CAAC,SAAS,GAyCtD;kBAzCoB,aAAa","file":"","sourceRoot":"../../../../../assets/Script/network","sourcesContent":["/**\n * @desc: { WebSocket } \n * @author: zhengyiqiu \n * @Create Date: 2020-06-30 20:44:24 \n * @Last Modified by: 80261040\n * @Last Modified time: 2021-08-19 17:27:04\n */\n\nconst { ccclass, property } = cc._decorator\n\n@ccclass\nexport default class WebSocketDemo extends cc.Component {\n  @property(cc.Label)\n  logLabel: cc.Label = null\n\n  @property(cc.Node)\n  sendMsg: cc.Node = null\n  \n  @property(cc.Node)\n  returnBtn: cc.Node = null\n  \n  start() {\n    this.sendMsg.on(cc.Node.EventType.TOUCH_START, () => {\n      let ws = new WebSocket('ws://sbattle.wanyol.com/battle')\n      ws.onopen = (event) => {\n        this.log('send test ws was opened')\n        if(ws.readyState === WebSocket.OPEN) {\n          ws.send(\"Hello WebSocket, I'm a text message\")\n        } else {\n          this.log(\"WebSocket instance wasn't ready...\")\n        }\n      }\n      ws.onmessage = (event) => {\n        this.log(`response text msg: ${event.data}`)\n      }\n      ws.onerror = (event) => {\n        this.log(`send text fired an error`)\n      }\n      ws.onclose = (event) => {\n        this.log('WebSocket instance closed')\n      }\n    })\n\n    this.returnBtn.on(cc.Node.EventType.TOUCH_START, () => {\n      cc.director.loadScene('network')\n    })\n  }\n\n  log(msg) {\n    console.log(msg)\n    this.logLabel.getComponent(cc.Label).string = msg\n  }\n}\n"]}