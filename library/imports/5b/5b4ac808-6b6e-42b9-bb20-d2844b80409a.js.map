{"version":3,"sources":["../../../../../assets/Script/media/assets/Script/media/Video.ts"],"names":[],"mappings":";;;;AAAA;;;;;;GAMG;;AAEG,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAkB;AAC3C,IAAI,KAAK,CAAA;AAET;IAAiC,uBAAY;IAD7C;QAAA,qEAmDC;QAhDC,cAAQ,GAAa,IAAI,CAAA;QAGzB,UAAI,GAAY,IAAI,CAAA;QAGpB,eAAS,GAAY,IAAI,CAAA;QAGzB,iBAAW,GAAmB,IAAI,CAAA;QAGlC,YAAM,GAAiB,IAAI,CAAA;;IAoC7B,CAAC;IAlCC,mBAAK,GAAL;QAAA,iBA6BC;QA5BC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC1C,IAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;YACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAA;YAC1D,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC;gBACnB,CAAC,EAAE,MAAM,CAAC,KAAK,GAAC,CAAC,GAAC,GAAG;gBACrB,CAAC,EAAE,MAAM,CAAC,MAAM,GAAC,CAAC;gBAClB,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;gBACX,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC9D,MAAM,EAAE,KAAI,CAAC,MAAM;gBACnB,YAAY,EAAE,GAAG;gBACjB,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,KAAK;aAClB,CAAC,CAAC;YAEH,KAAK,CAAC,MAAM,CAAC;gBACT,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,EAAE,CAAC;QACf,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC/C,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;YAC1B,IAAG,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;gBACzB,KAAK,CAAC,OAAO,EAAE,CAAA;aAChB;YACD,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;QAChC,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,iBAAG,GAAH,UAAI,GAAG;QACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,CAAA;IACnD,CAAC;IA/CD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;yCACM;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qCACE;IAGpB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACO;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;4CACS;IAGlC;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;uCACI;IAdR,GAAG;QADvB,OAAO;OACa,GAAG,CAkDvB;IAAD,UAAC;CAlDD,AAkDC,CAlDgC,EAAE,CAAC,SAAS,GAkD5C;kBAlDoB,GAAG","file":"","sourceRoot":"../../../../../assets/Script/media","sourcesContent":["/**\n * @desc: { 图片 } \n * @author: zhengyiqiu \n * @Create Date: 2020-06-29 17:43:49 \n * @Last Modified by: 80261040\n * @Last Modified time: 2021-02-26 10:57:10\n */\n\nconst { ccclass, property } = cc._decorator\nlet video\n@ccclass\nexport default class Img extends cc.Component {\n  @property(cc.Label)\n  logLabel: cc.Label = null\n\n  @property(cc.Node)\n  play: cc.Node = null\n  \n  @property(cc.Node)\n  returnBtn: cc.Node = null\n\n  @property(cc.VideoPlayer)\n  videoPlayer: cc.VideoPlayer = null\n  \n  @property(cc.Texture2D)\n  poster: cc.Texture2D = null\n\n  start() {\n    this.play.on(cc.Node.EventType.TOUCH_START, () => {\n      const canvas = window['__canvas']\n      console.log(this.videoPlayer.getComponent(cc.VideoPlayer))\n      video = qg.createVideo({\n          x: canvas.width/2-450,\n          y: canvas.height/2,\n          width: 900,\n          height: 450,\n          src: this.videoPlayer.getComponent(cc.VideoPlayer).clip['url'],\n          poster: this.poster,\n          playbackRate: 1.0,\n          objectFit: \"contain\",\n          autoplay: false,\n      });\n      \n      video.onPlay(() => {\n          this.log(\"video play\");\n      });\n      video.play();\n    })\n\n    this.returnBtn.on(cc.Node.EventType.TOUCH_START, () => {\n      this.videoPlayer.destroy()\n      if(video && video.destroy) {\n        video.destroy()\n      }\n      cc.director.loadScene('media')\n    })\n  }\n  log(msg) {\n    console.log(msg)\n    this.logLabel.getComponent(cc.Label).string = msg\n  }\n}\n"]}