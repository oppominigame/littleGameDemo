{"version":3,"sources":["../../../../../assets/Script/platformTool/assets/Script/platformTool/VConsole.ts"],"names":[],"mappings":";;;;AAAA;;;;;;GAMG;;AAEG,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAkB;AAG3C;IAAsC,4BAAY;IADlD;QAAA,qEA+CC;QA5CC,cAAQ,GAAa,IAAI,CAAA;QAGzB,iBAAW,GAAY,IAAI,CAAA;QAG3B,eAAS,GAAY,IAAI,CAAA;;IAsC3B,CAAC;IApCC,wBAAK,GAAL;QAAA,iBA8BC;QA7BC,IAAI,QAAQ,GAAG,KAAK,CAAA;QACpB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YACjD,EAAE,CAAC,cAAc,CAAC;gBAChB,WAAW,EAAE,CAAC,QAAQ;gBACtB,OAAO,EAAE;oBACL,QAAQ,GAAG,CAAC,QAAQ,CAAA;oBACpB,IAAG,CAAC,QAAQ,EAAE;wBACZ,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,OAAO,CAAA;wBACrF,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;qBACpB;yBAAM;wBACL,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,OAAO,CAAA;wBACrF,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;qBACpB;oBACD,yBAAyB;oBACzB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBAC/B,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAClC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACjC,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBACnC,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBACvC,CAAC;gBACD,IAAI,EAAE;oBACJ,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;gBACrB,CAAC;aACJ,CAAC,CAAC;QACH,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC/C,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;QACvC,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,sBAAG,GAAH,UAAI,GAAG;QACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,CAAA;IACnD,CAAC;IA3CD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;8CACM;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACS;IAG3B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACO;IARN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA8C5B;IAAD,eAAC;CA9CD,AA8CC,CA9CqC,EAAE,CAAC,SAAS,GA8CjD;kBA9CoB,QAAQ","file":"","sourceRoot":"../../../../../assets/Script/platformTool","sourcesContent":["/**\n * @desc: { vConsole } \n * @author: zhengyiqiu \n * @Create Date: 2020-06-23 10:21:00 \n * @Last Modified by: zhengyiqiu\n * @Last Modified time: 2020-07-01 11:30:02\n */\n\nconst { ccclass, property } = cc._decorator\n\n@ccclass\nexport default class VConsole extends cc.Component {\n  @property(cc.Label)\n  logLabel: cc.Label = null\n\n  @property(cc.Node)\n  enableDebug: cc.Node = null\n\n  @property(cc.Node)\n  returnBtn: cc.Node = null\n  \n  start() {\n    let isEnable = false\n    this.enableDebug.on(cc.Node.EventType.TOUCH_START, () => {\n      qg.setEnableDebug({\n        enableDebug: !isEnable, // true 为打开，false 为关闭\n        success: () => {\n            isEnable = !isEnable\n            if(!isEnable) {\n              cc.find('Background/Label', this.enableDebug).getComponent(cc.Label).string = '打开控制台'\n              this.log('成功关闭控制台')\n            } else {\n              cc.find('Background/Label', this.enableDebug).getComponent(cc.Label).string = '关闭控制台'\n              this.log('成功打开控制台')\n            }\n            // 以下语句将会在 vConsole 面板输出 \n            console.log(\"test consol log\");\n            console.info(\"test console info\");\n            console.warn(\"test consol warn\");\n            console.debug(\"test consol debug\");\n            console.error(\"test consol error\");\n        },\n        fail: () => {\n          this.log('打开控制台失败')\n        }\n    });\n    })\n\n    this.returnBtn.on(cc.Node.EventType.TOUCH_START, () => {\n      cc.director.loadScene('platformTool')\n    })\n  }\n\n  log(msg) {\n    console.log(msg)\n    this.logLabel.getComponent(cc.Label).string = msg\n  }\n}\n"]}